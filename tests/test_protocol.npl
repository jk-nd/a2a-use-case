package test_workflow

/**
 * Simple test protocol for deployment testing
 * @param creator The party creating the test instance
 * @param participant The party participating in the test
 * @param initialValue The initial value for the test
 */
@api
protocol[creator, participant] TestProtocol(var initialValue: Number) {
    require(initialValue > 0, "Initial value must be strictly positive");

    initial state created;
    final state completed;
    final state cancelled;

    private var currentValue: Number = initialValue;

    /**
     * Function to get the current value
     * @return The current value
     */
    function getCurrentValue() returns Number -> currentValue;

    /**
     * Function to update the value, invoked by the creator
     * @param newValue The new value to set
     */
    @api
    permission[creator] updateValue(newValue: Number) | created {
        require(newValue > 0, "New value must be strictly positive");
        currentValue = newValue;
    };

    /**
     * Function to complete the test, invoked by the participant
     */
    @api
    permission[participant] complete() | created {
        become completed;
    };

    /**
     * Function to cancel the test, invoked by the creator
     */
    @api
    permission[creator] cancel() | created {
        become cancelled;
    };

    /**
     * Function to get the current value, invoked by either party
     * @return The current value
     */
    @api
    permission[creator | participant] getValue() returns Number | created {
        return getCurrentValue();
    };
} 